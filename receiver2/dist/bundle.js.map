{"version":3,"file":"bundle.js","sources":["../src/logger.ts","../src/cast_receiver.ts"],"sourcesContent":["export class Logger {\n  private logger: debug.CastDebugLogger;\n  private name: string;\n\n  constructor(name: string, logger: debug.CastDebugLogger) {\n    this.name = name;\n\n    this.logger = logger;\n\n    this.logger.setEnabled(true);\n    this.logger.loggerLevelByEvents = {\n      \"cast.framework.events.category.CORE\": cast.framework.LoggerLevel.INFO,\n      \"cast.framework.events.EventType.MEDIA_STATUS\": cast.framework.LoggerLevel.DEBUG,\n    };\n    if (!this.logger.loggerLevelByTags) {\n      this.logger.loggerLevelByTags = {};\n    }\n    this.logger.loggerLevelByTags[this.name] = cast.framework.LoggerLevel.DEBUG;\n    // Set to true to show debug overlay.\n    // this.logger.showDebugLogs(true);\n  }\n\n  public debug(...args: any[]) {\n    // console.log(`[${this.name}]`, ...args);\n    this.logger.info(this.name, ...args);\n  }\n\n  public error(...args: any[]) {\n    this.logger.error(this.name, ...args);\n  }\n\n  public info(...args: any[]) {\n    this.logger.info(this.name, ...args);\n  }\n\n  public warn(...args: any[]) {\n    this.logger.warn(this.name, ...args);\n  }\n}\n","import { CastReceiverContext, PlaybackConfig, PlayerManager } from \"chromecast-caf-receiver/cast.framework\";\nimport {\n  ErrorData,\n  ErrorReason,\n  ErrorType,\n  LoadRequestData,\n  MessageType,\n  RequestData,\n  SeekRequestData,\n} from \"chromecast-caf-receiver/cast.framework.messages\";\nimport { EventType, MediaElementEvent, ErrorEvent } from \"chromecast-caf-receiver/cast.framework.events\";\nimport { CastDebugLogger } from \"chromecast-caf-receiver/cast.debug\";\nimport { Logger } from \"./logger\";\n\nimport SmartWebPlayer from \"../external/smart-web-player\";\nimport { Drm } from \"./drm\";\n\nexport class CastReceiver {\n  private readonly _context: CastReceiverContext;\n  private readonly _playerManager: PlayerManager;\n\n  private readonly logger: Logger;\n  private readonly _player: SmartWebPlayer.BasePlayer;\n\n  constructor() {\n    this._context = CastReceiverContext.getInstance();\n    this._playerManager = this._context.getPlayerManager();\n    this._player = SmartWebPlayer.getSmartPlayer();\n    this._player.init();\n\n    this.logger = new Logger(\"UCast Receiver\", CastDebugLogger.getInstance());\n\n    // Provide an interceptor for LOAD messages.\n    this._playerManager.setMessageInterceptor(MessageType.LOAD, this.handleLoad);\n    this._playerManager.setMessageInterceptor(MessageType.PAUSE, this.handlePause);\n    this._playerManager.setMessageInterceptor(MessageType.PLAY, this.handlePlay);\n    this._playerManager.setMessageInterceptor(MessageType.SEEK, this.handleSeek);\n\n    // Add basic event listeners\n    this._playerManager.addEventListener(EventType.PLAY, this.handlePlayEvent);\n    this._playerManager.addEventListener(EventType.PAUSE, this.handlePauseEvent);\n    this._playerManager.addEventListener(EventType.ERROR, this.handleErrorEvent);\n  }\n\n  // Start receiving requests from senders.\n  public start() {\n    let castReceiverOptions = new cast.framework.CastReceiverOptions();\n    // Do not load unnecessary JS files for players we don't need.\n    castReceiverOptions.skipPlayersLoad = true;\n\n    // Disable the idle timeout. Note that this is something actually useful to have, but it should\n    // be easy to implement with some bookkeeping and `setTimeout`.\n    castReceiverOptions.disableIdleTimeout = true;\n\n    // Enable basic media commands.\n    castReceiverOptions.supportedCommands = cast.framework.messages.Command.ALL_BASIC_MEDIA;\n\n    // Optional, maximize the debug level to diagnose problems.\n    this._context.setLoggerLevel(cast.framework.LoggerLevel.DEBUG);\n\n    this._context.start(castReceiverOptions);\n  }\n\n  // Setup playbackConfig with a sourceDescription license information passed by loadRequestData.\n  private readonly handleLoad = (loadRequestData: LoadRequestData): null => {\n    this.logger.debug(\"LOAD event received\", loadRequestData);\n    // If the loadRequestData is incomplete, return an error message\n    if (!loadRequestData || !loadRequestData.media) {\n      const error = new ErrorData(ErrorType.LOAD_FAILED);\n      error.reason = ErrorReason.INVALID_REQUEST;\n      this.logger.error(\"LOAD_FAILED: Verify the load request is set up properly and the media is able to play.\");\n      return null;\n    }\n\n    const contentId = loadRequestData.media.contentId;\n    const contentUrl = loadRequestData.media.contentUrl;\n    this.logger.debug(\"received contentId\", contentId, \"contentUrl\", contentUrl);\n\n    // Check for sourceDescription\n    const drm = loadRequestData?.media.customData?.drm as Drm | undefined;\n    this.logger.debug(\"received drm\", loadRequestData?.customData, drm);\n    if (drm) {\n      const license = drm.licenseUrl;\n      const jwt = drm.jwt;\n      this._player.setSrc(contentId, {\n        type: \"widevine\",\n        data: { licenseUrl: license },\n        headers: {\n          Authorization: jwt,\n        },\n      });\n    } else {\n      this._player.setSrc(contentId);\n    }\n\n    return null;\n    // const selectedSource = sourceDescription?.sources?.find((source: any) => {\n    //   return source.src === loadRequestData.media.contentId || source.src === loadRequestData.media.contentUrl;\n    // });\n    // if (selectedSource) {\n    //   const playbackConfig = Object.assign(new PlaybackConfig(), this._playerManager.getPlaybackConfig());\n\n    //   // Check for contentProtection (DRM)\n    //   const contentProtection = selectedSource.contentProtection ?? selectedSource.drm;\n    //   if (contentProtection) {\n    //     // Enrich playbackConfig with contentProtection properties.\n    //     // createContentProtectionConfigEnricher(contentProtection)?.enrich(playbackConfig); TODO\n    //   }\n\n    //   // Set an optional manifest request handler\n    //   playbackConfig.manifestRequestHandler = (_request: framework.NetworkRequestInfo) => {\n    //     // request.url = `<proxy>${request.url}`;\n    //   };\n\n    //   // Set an optional segment request handler\n    //   playbackConfig.segmentRequestHandler = (_request: framework.NetworkRequestInfo) => {\n    //     // request.url = `<proxy>${request.url}`;\n    //   };\n\n    //   this._playerManager.setPlaybackConfig(playbackConfig);\n    // }\n\n    // return loadRequestData;\n  };\n\n  private readonly handlePlay = (event: RequestData): null => {\n    this.logger.debug(\"PLAY received\");\n    this._player.play();\n    return null;\n  };\n\n  private readonly handlePause = (event: RequestData): null => {\n    this.logger.debug(\"PAUSE received\");\n    this._player.pause();\n    return null;\n  };\n\n  private readonly handleSeek = (event: SeekRequestData): null => {\n    this.logger.debug(\"SEEK  received\", event.currentTime);\n    if (event.currentTime !== undefined) {\n      this._player.seekTo(event.currentTime * 1000 ?? 0);\n    }\n    return null;\n  };\n\n  private readonly handlePlayEvent = (event: MediaElementEvent): void => {\n    this.logger.debug(\"PLAY event received\", event.currentMediaTime);\n    this._player.play();\n  };\n\n  private readonly handlePauseEvent = (event: MediaElementEvent): void => {\n    this.logger.debug(\"PAUSE event received\", event.currentMediaTime);\n  };\n\n  private readonly handleErrorEvent = (event: ErrorEvent): void => {\n    this.logger.error(\"Detailed Error Code - \" + event.detailedErrorCode);\n  };\n}\n"],"names":["ErrorData","ErrorType","ErrorReason","CastReceiverContext","CastDebugLogger","MessageType","EventType"],"mappings":"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"}